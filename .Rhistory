exposure = trt,
family = "binomial",
link = "logit",
numerator = ~ 1,
denominator = ~ Sex+Age+Distress,
data = mydata)
summary(temp$ipw.weights)
mydata$sw <- temp$ipw.weights
psmodel <- glm(trt ~ Sex+Age+Distress,
family= binomial(link='logit'), data = mydata)
#Obtain PS
ps <- predict(psmodel, type='response')
mydata$ps <- ps
mydata$w <- ifelse(mydata$trt==1, (1/mydata$ps), (1/(1-mydata$ps)))
summary(simdat[,c("ps", "w", "sw")])
#Plot inverse probability weights
graphics.off()
ipwplot(weights = temp$ipw.weights, logscale = FALSE,
main = "Stabilized weights", xlim = c(0, 8))
#Examine numerator and denominator models.
summary(temp$num.mod)
summary(temp$den.mod)
#Paste inverse probability weights
simdat$sw <- temp$ipw.weights
set.seed(1234)
df.patients <- r_data_frame(n = 250,
age(x = 30:78,
name = 'Age'),
sex(x = c("Male", "Female"),
prob = c(0.70, 0.30),
name = "Sex"))
df.patients$Sample <- as.factor('Patients')
set.seed(1234)
df.population <- r_data_frame(n = 1000,
age(x = 18:80,
name = 'Age'),
sex(x = c("Male", "Female"),
prob = c(0.50, 0.50),
name = "Sex"))
df.population$Sample <- as.factor('Population')
mydata <- rbind(df.patients, df.population)
mydata$Group <- as.logical(mydata$Sample == 'Patients')
mydata$Distress <- ifelse(mydata$Sex == 'Male', age(nrow(mydata), x = 0:42, name = 'Distress'),
age(nrow(mydata), x = 15:42, name = 'Distress'))
mydata$trt <- ifelse(mydata$Group=="TRUE", 1, 0)
#Estimate ipw weights.
temp <- ipwpoint(
exposure = trt,
family = "binomial",
link = "logit",
numerator = ~ 1,
denominator = ~ Sex+Age+Distress,
data = mydata)
summary(temp$ipw.weights)
set.seed(1234)
df.patients <- r_data_frame(n = 250,
age(x = 30:78,
name = 'Age'),
sex(x = c("Male", "Female"),
prob = c(0.70, 0.30),
name = "Sex"))
df.patients$Sample <- as.factor('Patients')
set.seed(1234)
df.population <- r_data_frame(n = 1000,
age(x = 18:80,
name = 'Age'),
sex(x = c("Male", "Female"),
prob = c(0.50, 0.50),
name = "Sex"))
df.population$Sample <- as.factor('Population')
mydata <- rbind(df.patients, df.population)
mydata$Group <- as.logical(mydata$Sample == 'Patients')
mydata$Distress <- ifelse(mydata$Sex == 'Male', age(nrow(mydata), x = 0:42, name = 'Distress'),
age(nrow(mydata), x = 15:42, name = 'Distress'))
mydata$trt <- ifelse(mydata$Group=="TRUE", 1, 0)
View(mydata)
temp <- ipwpoint(
exposure = trt,
family = "binomial",
link = "logit",
numerator = ~ 1,
denominator = ~ Sex+Age+Distress,
data = mydata)
summary(temp$ipw.weights)
mydata$trt <- ifelse(mydata$Group=="TRUE", 1, 0)
View(mydata)
mydata$trt <- ifelse(mydata$Group==TRUE, 1, 0)
#Estimate ipw weights.
temp <- ipwpoint(
exposure = trt,
family = "binomial",
link = "logit",
numerator = ~ 1,
denominator = ~ Sex+Age+Distress,
data = mydata)
summary(temp$ipw.weights)
set.seed(1234)
df.patients <- r_data_frame(n = 250,
age(x = 30:78,
name = 'Age'),
sex(x = c("Male", "Female"),
prob = c(0.70, 0.30),
name = "Sex"))
df.patients$Sample <- as.factor('Patients')
set.seed(1234)
df.population <- r_data_frame(n = 1000,
age(x = 18:80,
name = 'Age'),
sex(x = c("Male", "Female"),
prob = c(0.50, 0.50),
name = "Sex"))
df.population$Sample <- as.factor('Population')
mydata <- rbind(df.patients, df.population)
mydata$Group <- as.logical(mydata$Sample == 'Patients')
mydata$Distress <- ifelse(mydata$Sex == 'Male', age(nrow(mydata), x = 0:42, name = 'Distress'),
age(nrow(mydata), x = 15:42, name = 'Distress'))
View(mydata)
one$trt <- ifelse(mydata$Group==TRUE, 1, 0)
trt <- ifelse(mydata$Group==TRUE, 1, 0)
one <- as.data(trt)
one <- as.data.frame(trt)
mydata$trt <- one$trt
#Estimate ipw weights.
temp <- ipwpoint(
exposure = trt,
family = "binomial",
link = "logit",
numerator = ~ 1,
denominator = ~ Sex+Age+Distress,
data = mydata)
summary(temp$ipw.weights)
mydata$trt <- ifelse(mydata$Group==TRUE, 1, 0)
temp <- ipwpoint(
exposure = trt,
family = "binomial",
link = "logit",
numerator = ~ 1,
denominator = ~ Sex+Age+Distress,
data = mydata)
mydata$trt <- as.factor(mydata$trt)
temp <- ipwpoint(
exposure = trt,
family = "binomial",
link = "logit",
numerator = ~ 1,
denominator = ~ Sex+Age+Distress,
data = mydata)
temp <- ipwpoint(
exposure = trt,
family = "binomial",
link = "logit",
numerator = ~ 1,
denominator = ~ 1,
data = mydata)
set.seed(1234)
df.patients <- r_data_frame(n = 250,
age(x = 30:78,
name = 'Age'),
sex(x = c("Male", "Female"),
prob = c(0.70, 0.30),
name = "Sex"))
df.patients$Sample <- as.factor('Patients')
set.seed(1234)
df.population <- r_data_frame(n = 1000,
age(x = 18:80,
name = 'Age'),
sex(x = c("Male", "Female"),
prob = c(0.50, 0.50),
name = "Sex"))
df.population$Sample <- as.factor('Population')
mydata <- rbind(df.patients, df.population)
mydata$Group <- as.logical(mydata$Sample == 'Patients')
mydata$Distress <- ifelse(mydata$Sex == 'Male', age(nrow(mydata), x = 0:42, name = 'Distress'),
age(nrow(mydata), x = 15:42, name = 'Distress'))
mydata$trt <- ifelse(mydata$Group=='TRUE', 1, 0)
View(mydata)
temp <- ipwpoint(
exposure = trt,
family = "binomial",
link = "logit",
numerator = ~ 1,
denominator = ~ Sex+Age+Distress,
data = mydata)
df_ipw <- data.frame(1:1250)
df_ipw$trt <- ifelse(mydata$Group=='TRUE', 1, 0)
conf <- mydata %>% select(c(Age,Sex,Distress))
library(tidyverse)
df_ipw <- data.frame(1:1250)
df_ipw$trt <- ifelse(mydata$Group=='TRUE', 1, 0)
conf <- mydata %>% select(c(Age,Sex,Distress))
df_ipw <- cbind(df_ipw,conf)
View(df_ipw)
set.seed(1234)
df.patients <- r_data_frame(n = 250,
age(x = 30:78,
name = 'Age'),
sex(x = c("Male", "Female"),
prob = c(0.70, 0.30),
name = "Sex"))
df.patients$Sample <- as.factor('Patients')
set.seed(1234)
df.population <- r_data_frame(n = 1000,
age(x = 18:80,
name = 'Age'),
sex(x = c("Male", "Female"),
prob = c(0.50, 0.50),
name = "Sex"))
df.population$Sample <- as.factor('Population')
mydata <- rbind(df.patients, df.population)
mydata$Group <- as.logical(mydata$Sample == 'Patients')
mydata$Distress <- ifelse(mydata$Sex == 'Male', age(nrow(mydata), x = 0:42, name = 'Distress'),
age(nrow(mydata), x = 15:42, name = 'Distress'))
mydata$trt <- ifelse(mydata$Group=='TRUE', 1, 0)
df_ipw <- data.frame(1:1250)
df_ipw$trt <- ifelse(mydata$Group=='TRUE', 1, 0)
conf <- mydata %>% select(c(Age,Sex,Distress))
df_ipw <- cbind(df_ipw,conf)
temp <- ipwpoint(
exposure = trt,
family = "binomial",
link = "logit",
numerator = ~ 1,
denominator = ~ Sex+Age+Distress,
data = df_ipw)
View(temp)
summary(temp$ipw.weights)
df_ipw$sw <- temp$ipw.weights
psmodel <- glm(trt ~ Sex+Age+Distress,
family= binomial(link='logit'), data = df_ipw)
ps <- predict(psmodel, type='response')
df_ipw$ps <- ps
df_ipw$ps <- ps
df_ipw$w <- ifelse(df_ipw$trt==1, (1/df_ipw$ps), (1/(1-df_ipw$ps)))
summary(simdat[,c("ps", "w", "sw")])
summary(df_ipw[,c("ps", "w", "sw")])
df_ipw$w <- 1/df_ipw$ps
summary(df_ipw[,c("ps", "w", "sw")])
set.seed(1234)
df.patients <- r_data_frame(n = 250,
age(x = 30:78,
name = 'Age'),
sex(x = c("Male", "Female"),
prob = c(0.70, 0.30),
name = "Sex"))
df.patients$Sample <- as.factor('Patients')
set.seed(1234)
df.population <- r_data_frame(n = 1000,
age(x = 18:80,
name = 'Age'),
sex(x = c("Male", "Female"),
prob = c(0.50, 0.50),
name = "Sex"))
df.population$Sample <- as.factor('Population')
mydata <- rbind(df.patients, df.population)
mydata$Group <- as.logical(mydata$Sample == 'Patients')
mydata$Distress <- ifelse(mydata$Sex == 'Male', age(nrow(mydata), x = 0:42, name = 'Distress'),
age(nrow(mydata), x = 15:42, name = 'Distress'))
mydata$trt <- ifelse(mydata$Group=='TRUE', 1, 0)
df_ipw <- data.frame(1:1250)
df_ipw$trt <- ifelse(mydata$Group=='TRUE', 1, 0)
conf <- mydata %>% select(c(Age,Sex,Distress))
df_ipw <- cbind(df_ipw,conf)
#Estimate ipw weights.
temp <- ipwpoint(
exposure = trt,
family = "binomial",
link = "logit",
numerator = ~ 1,
denominator = ~ Sex+Age+Distress,
data = df_ipw)
summary(temp$ipw.weights)
df_ipw$sw <- temp$ipw.weights
psmodel <- glm(trt ~ Sex+Age+Distress,
family= binomial(link='logit'), data = df_ipw)
#Obtain PS
ps <- predict(psmodel, type='response')
df_ipw$ps <- ps
df_ipw$w <- ifelse(df_ipw$trt==1, (1/df_ipw$ps), (1/(1-df_ipw$ps)))
summary(df_ipw[,c("ps", "w", "sw")])
#Plot inverse probability weights
graphics.off()
ipwplot(weights = temp$ipw.weights, logscale = FALSE,
main = "Stabilized weights", xlim = c(0, 8))
#Examine numerator and denominator models.
summary(temp$num.mod)
summary(temp$den.mod)
#Paste inverse probability weights
simdat$sw <- temp$ipw.weights
library(websocket)
library(webshot)
library(wakefield)
library(whisker)
set.seed(1234)
df.patients <- r_data_frame(n = 250,
age(x = 30:78,
name = 'Age'),
sex(x = c("Male", "Female"),
prob = c(0.70, 0.30),
name = "Sex"))
df.patients$Sample <- as.factor('Patients')
set.seed(1234)
df.population <- r_data_frame(n = 1000,
age(x = 18:80,
name = 'Age'),
sex(x = c("Male", "Female"),
prob = c(0.50, 0.50),
name = "Sex"))
df.population$Sample <- as.factor('Population')
mydata <- rbind(df.patients, df.population)
mydata$Group <- as.logical(mydata$Sample == 'Patients')
mydata$Distress <- ifelse(mydata$Sex == 'Male', age(nrow(mydata), x = 0:42, name = 'Distress'),
age(nrow(mydata), x = 15:42, name = 'Distress'))
mydata$trt <- ifelse(mydata$Group=='TRUE', 1, 0)
df_ipw <- data.frame(1:1250)
df_ipw$trt <- ifelse(mydata$Group=='TRUE', 1, 0)
conf <- mydata %>% select(c(Age,Sex,Distress))
df_ipw <- cbind(df_ipw,conf)
#Estimate ipw weights.
temp <- ipwpoint(
exposure = trt,
family = "binomial",
link = "logit",
numerator = ~ 1,
denominator = ~ Sex+Age+Distress,
data = df_ipw)
summary(temp$ipw.weights)
df_ipw$sw <- temp$ipw.weights
psmodel <- glm(trt ~ Sex+Age+Distress,
family= binomial(link='logit'), data = df_ipw)
#Obtain PS
ps <- predict(psmodel, type='response')
df_ipw$ps <- ps
df_ipw$w <- ifelse(df_ipw$trt==1, (1/df_ipw$ps), (1/(1-df_ipw$ps)))
summary(df_ipw[,c("ps", "w", "sw")])
#Plot inverse probability weights
graphics.off()
ipwplot(weights = temp$ipw.weights, logscale = FALSE,
main = "Stabilized weights", xlim = c(0, 8))
#Examine numerator and denominator models.
summary(temp$num.mod)
summary(temp$den.mod)
#Paste inverse probability weights
simdat$sw <- temp$ipw.weights
library(tidyverse)
library(ipw)
set.seed(1234)
df.patients <- r_data_frame(n = 250,
age(x = 30:78,
name = 'Age'),
sex(x = c("Male", "Female"),
prob = c(0.70, 0.30),
name = "Sex"))
df.patients$Sample <- as.factor('Patients')
set.seed(1234)
df.population <- r_data_frame(n = 1000,
age(x = 18:80,
name = 'Age'),
sex(x = c("Male", "Female"),
prob = c(0.50, 0.50),
name = "Sex"))
df.population$Sample <- as.factor('Population')
mydata <- rbind(df.patients, df.population)
mydata$Group <- as.logical(mydata$Sample == 'Patients')
mydata$Distress <- ifelse(mydata$Sex == 'Male', age(nrow(mydata), x = 0:42, name = 'Distress'),
age(nrow(mydata), x = 15:42, name = 'Distress'))
mydata$trt <- ifelse(mydata$Group=='TRUE', 1, 0)
df_ipw <- data.frame(1:1250)
df_ipw$trt <- ifelse(mydata$Group=='TRUE', 1, 0)
conf <- mydata %>% select(c(Age,Sex,Distress))
df_ipw <- cbind(df_ipw,conf)
#Estimate ipw weights.
temp <- ipwpoint(
exposure = trt,
family = "binomial",
link = "logit",
numerator = ~ 1,
denominator = ~ Sex+Age+Distress,
data = df_ipw)
summary(temp$ipw.weights)
df_ipw$sw <- temp$ipw.weights
psmodel <- glm(trt ~ Sex+Age+Distress,
family= binomial(link='logit'), data = df_ipw)
#Obtain PS
ps <- predict(psmodel, type='response')
df_ipw$ps <- ps
df_ipw$w <- ifelse(df_ipw$trt==1, (1/df_ipw$ps), (1/(1-df_ipw$ps)))
summary(df_ipw[,c("ps", "w", "sw")])
#Plot inverse probability weights
graphics.off()
ipwplot(weights = temp$ipw.weights, logscale = FALSE,
main = "Stabilized weights", xlim = c(0, 8))
#Examine numerator and denominator models.
summary(temp$num.mod)
summary(temp$den.mod)
#Paste inverse probability weights
simdat$sw <- temp$ipw.weights
require("mice")
set.seed(2016)
testdata <- MASS::mvrnorm(n = 10000, mu = c(10, 5, 0), Sigma = matrix(data = c(1.0, 0.2, 0.2, 0.2, 1.0, 0.2, 0.2, 0.2, 1.0), nrow = 3, byrow = T))
testdata <- as.data.frame(testdata)
summary(testdata)
View(testdata)
result <- ampute(testdata)
result
md.pattern(result$amp)
result$prop
View(result)
result$patterns
mypatterns <- result$patterns
mypatterns
mypatterns[1, 1] <- 1
mypatterns <- rbind(mypatterns, c(0, 1, 0))
mypatterns
mypatterns <- result$patterns
mypatterns
mypatterns[1, 1] <- 1
mypatterns
result <- ampute(testdata, patterns = mypatterns)
md.pattern(result$amp)
install.packages("citr")
citr:::insert_citation()
remotes::install_github("noamross/redoc")
citr:::insert_citation()
blogdown:::update_meta_addin()
library(htmltab)
library(dplyr)
library(tidyr)
url <- "https://www.sfda.gov.sa/ar/drug/about/sector_departments/national_pharmacovigilance_center/Pages/Pharmacovigilance.aspx"
one <- url %>%
htmltab(3, rm_nodata_cols = F) %>%
replace_na(list(Notes = "", "Term-limited?" = "")) %>%
`rownames<-` (seq_len(nrow(.)))
View(one)
url_base <- "https://www.sfda.gov.sa/ar/drug/about/sector_departments/national_pharmacovigilance_center/Pages/Pharmacovigilance.aspx"
for (i in 1:ceiling(1800/18)) {
url <- paste0(url_base, i)
tbl.page <- url %>%
htmltab(3, rm_nodata_cols = F) %>%
replace_na(list(Notes = "", "Term-limited?" = "")) %>%
`rownames <-` (seq_len(nrow(.)))
}
url_base <- "https://www.sfda.gov.sa/ar/drug/about/sector_departments/national_pharmacovigilance_center/Pages/Pharmacovigilance.aspx"
tbl.clactions <- data.frame(
"Date" = character(0),
"Name" = character(0),
"Safety" = character(0))
for (i in 1:ceiling(1800/18)) {
url <- paste0(url_base, i)
tbl.page <- url %>%
htmltab(3, rm_nodata_cols = F) %>%
replace_na(list(Notes = "", "Term-limited?" = "")) %>%
`rownames<-` (seq_len(nrow(.)))
names(tbl.page[[1]]) <- names(tbl.clactions)
tbl.clactions <- bind_rows(tbl.clactions, tbl.page[[1]])
}
url_base <- "https://www.sfda.gov.sa/ar/drug/about/sector_departments/national_pharmacovigilance_center/Pages/Pharmacovigilance.aspx"
tbl.clactions <- data.frame(
"Date" = character(0),
"Name" = character(0),
"Safety" = character(0))
for (i in 1:ceiling(1800/18)) {
url <- paste0(url_base, i)
tbl.page <- url %>%
htmltab(3, rm_nodata_cols = F) %>%
replace_na(list(Notes = "", "Term-limited?" = "")) %>%
`rownames<-` (seq_len(nrow(.)))
names(tbl.page[[1]]) <- names(tbl.clactions)
tbl.clactions <- bind_rows(tbl.clactions, tbl.page[[1]])
}
library(readxl)
library(httr)
#create the URL where the dataset is stored with automatic updates every day
url <- paste("https://www.ecdc.europa.eu/sites/default/files/documents/COVID-19-geographic-disbtribution-worldwide-",format(Sys.time(), "%Y-%m-%d"), ".xlsx", sep = "")
#download the dataset from the website to a local temporary file
GET(url, authenticate(":", ":", type="ntlm"), write_disk(tf <- tempfile(fileext = ".xlsx")))
#read the Dataset sheet into “R”
data <- read_excel(tf)
View(data)
# create your site
library(blogdown)
new_site() # then hit stop
# install theme
install_theme("gcushen/hugo-academic", theme_example = TRUE, update_config = TRUE)
# make/view website with new theme
serve_site() # then hit stop
# create your site
library(blogdown)
new_site() # then hit stop
# install theme
install_theme("gcushen/hugo-academic", theme_example = TRUE, update_config = TRUE)
# make/view website with new theme
serve_site() # then hit stop
library(blogdown)
new_site() # then hit stop
setwd("~/")
setwd("~/Dropbox (UFL)/Personal_Web/Hugo")
# create your site
library(blogdown)
new_site() # then hit stop
# install theme
install_theme("gcushen/hugo-academic", theme_example = TRUE, update_config = TRUE)
# make/view website with new theme
serve_site() # then hit stop
serve_site()
blogdown:::serve_site()
setwd("~/Dropbox (UFL)/Personal Web/Source")
library(blogdown)
blogdown::new_site(theme = "gcushen/hugo-academic")
blogdown:::serve_site()
blogdown:::serve_site()
setwd("~/Dropbox (UFL)/Personal Web/yalbogami.github.io")
file.create('.nojekyll')
